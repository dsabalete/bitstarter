{"ts":1373530286720,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1373530265199,"patch":[[{"diffs":[[1,"#!/usr/bin/env node\n/*\nAutomatically grade files for the presence of specified HTML tags/attributes.\nUses commander.js and cheerio. Teaches command line application development\nand basic DOM parsing.\n\nReferences:\n\n + cheerio\n   - https://github.com/MatthewMueller/cheerio\n   - http://encosia.com/cheerio-faster-windows-friendly-alternative-jsdom/\n   - http://maxogden.com/scraping-with-node.html\n\n + commander.js\n   - https://github.com/visionmedia/commander.js\n   - http://tjholowaychuk.com/post/9103188408/commander-js-nodejs-command-line-interfaces-made-easy\n\n + JSON\n   - http://en.wikipedia.org/wiki/JSON\n   - https://developer.mozilla.org/en-US/docs/JSON\n   - https://developer.mozilla.org/en-US/docs/JSON#JSON_in_Firefox_2\n*/\n\nvar fs = require('fs');\nvar program = require('commander');\nvar cheerio = require('cheerio');\nvar HTMLFILE_DEFAULT = \"index.html\";\nvar CHECKSFILE_DEFAULT = \"checks.json\";\n\nvar assertFileExists = function(infile) {\n    var instr = infile.toString();\n    if(!fs.existsSync(instr)) {\n        console.log(\"%s does not exist. Exiting.\", instr);\n        process.exit(1); // http://nodejs.org/api/process.html#process_process_exit_code\n    }\n    return instr;\n};\n\nvar cheerioHtmlFile = function(htmlfile) {\n    return cheerio.load(fs.readFileSync(htmlfile));\n};\n\nvar loadChecks = function(checksfile) {\n    return JSON.parse(fs.readFileSync(checksfile));\n};\n\nvar checkHtmlFile = function(htmlfile, checksfile) {\n    $ = cheerioHtmlFile(htmlfile);\n    var checks = loadChecks(checksfile).sort();\n    var out = {};\n    for(var ii in checks) {\n        var present = $(checks[ii]).length > 0;\n        out[checks[ii]] = present;\n    }\n    return out;\n};\n\nvar clone = function(fn) {\n    // Workaround for commander.js issue.\n    // http://stackoverflow.com/a/6772648\n    return fn.bind({});\n};\n\nif(require.main == module) {\n    program\n        .option('-c, --checks <check_file>', 'Path to checks.json', clone(assertFileExists), CHECKSFILE_DEFAULT)\n        .option('-f, --file <html_file>', 'Path to index.html', clone(assertFileExists), HTMLFILE_DEFAULT)\n        .parse(process.argv);\n    var checkJson = checkHtmlFile(program.file, program.checks);\n    var outJson = JSON.stringify(checkJson, null, 4);\n    console.log(outJson);\n} else {\n    exports.checkHtmlFile = checkHtmlFile;\n}"]],"start1":0,"start2":0,"length1":0,"length2":2305}]],"length":2305,"saved":false}
{"contributors":[],"silentsave":false,"ts":1373531978299,"patch":[[{"diffs":[[0,"s.json\";"],[1,"\nvar URL_DEFAULT = \"http://www.google.com\";"],[0,"\n\nvar as"]],"start1":896,"start2":896,"length1":16,"length2":59},{"diffs":[[0,"MLFILE_DEFAULT)\n"],[1,"        .option('-u, --url <url>', 'URL', clone(assertFileExists), URL_DEFAULT)\n"],[0,"        .parse(p"]],"start1":2104,"start2":2104,"length1":32,"length2":112}]],"length":2428,"saved":false}
{"ts":1373532000360,"patch":[[{"diffs":[[0,"p://"],[-1,"www.google.com"],[1,"gentle-waters-3247.herokuapp.com/index.html"],[0,"\";\n\n"]],"start1":927,"start2":927,"length1":22,"length2":51}]],"length":2457,"saved":false}
{"ts":1373532005452,"patch":[[{"diffs":[[0,".com"],[-1,"/index.html"],[0,"\";\n\n"]],"start1":959,"start2":959,"length1":19,"length2":8}]],"length":2446,"saved":false}
{"ts":1373532290673,"patch":[[{"diffs":[[0,"uire('fs');\n"],[1,"var rest = require('restler');\n"],[0,"var program "]],"start1":746,"start2":746,"length1":24,"length2":55}]],"length":2477,"saved":false}
{"ts":1373532688821,"patch":[[{"diffs":[[0,"x_2\n*/\n\n"],[1,"var util = require('util');\n"],[0,"var fs ="]],"start1":726,"start2":726,"length1":16,"length2":44},{"diffs":[[0," instr;\n};\n\n"],[1,"var assertUrlExists = function(url) {\n    var response2console = function(result, response) {\n        if (result instanceof Error) {\n            console.error('Error: ' + util.format(response.message));\n        } else {\n            console.error('Wrote %s', url);\n            fs\n        }\n    };\n    rest.get(url).on('complete', response2console);    \n};\n\n"],[0,"var cheerioH"]],"start1":1299,"start2":1299,"length1":24,"length2":380}]],"length":2861,"saved":false}
